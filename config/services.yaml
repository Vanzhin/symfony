# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  cache_adapter: cache.adapter.filesystem
  default_image_dir: 'images'
  default_image: 'test.jpeg'
  article_upload: 'uploads/articles'
  article_upload_url: '%env(SITE_URL)%/%article_upload%'
  article_upload_dir: '%kernel.project_dir%/public/%article_upload%'
  default_article_upload_dir: '%kernel.project_dir%/public/%default_image_dir%'

  avatar_upload: 'uploads/avatars'
  avatar_upload_url: '%env(SITE_URL)%/%avatar_upload%'
  avatar_upload_dir: '%kernel.project_dir%/public/%avatar_upload%'





  router.request_context.host: '%env(SITE_BASE_HOST)%'
  router.request_context.scheme: '%env(SITE_BASE_SCHEME)%'
#  asset.request_context.secure: true
  app.name: '%env(APP_NAME)%'
  app.default_from_email: '%env(DEFAULT_FROM_ADDR)%'
  app.default_from_name: '%env(DEFAULT_FROM_NAME)%'


services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    bind:
      #$slackDsn: '%env(SLACK_DSN)%'

# при создании экземпляра App\Service\FileUploader с именем переменной $articleImageUploader выполняется тот или иной сервис (описан ниже)

      App\Service\FileUploader $articleImageUploader: '@image_uploader.article'
      App\Service\FileUploader $avatarImageUploader: '@image_uploader.avatar'
#      League\Flysystem\Filesystem $articleFileSystem: '@oneup_flysystem.upload_articles_filesystem'
#      League\Flysystem\Filesystem $avatarFileSystem: '@oneup_flysystem.upload_avatar_filesystem'



  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  # при сосздании экземпляра App\Service\FileUploader свойство $fileSystem в нем будет сервисом @oneup_flysystem.upload_articles_filesystem

  image_uploader.article:
      class: App\Service\FileUploader
      arguments:
        $fileSystem: '@oneup_flysystem.upload_articles_filesystem'


  image_uploader.avatar:
    class: App\Service\FileUploader
    arguments:
      $fileSystem: '@oneup_flysystem.upload_avatar_filesystem'

  App\Service\Mailer:
      arguments:
        $appName: '%app.name%'
        $defaultFromEmail: '%app.default_from_email%'
        $defaultFromName: '%app.default_from_name%'
